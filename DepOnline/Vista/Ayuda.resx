<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SCT+C+5ArgiXIpjOAAAAAElFTkSuQmCC
</value>
  </data>
</root>